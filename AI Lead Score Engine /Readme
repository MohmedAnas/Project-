# 🧠 AI Lead Scoring Engine

A production-ready machine learning system to score and rank leads based on user behavior, engagement, and demographics. Integrates with CRM/WhatsApp for real-time lead intelligence.

---

## 📊 Project Overview

This project builds an **AI-powered Lead Scoring System** using:
- Gradient Boosted Trees for prediction
- LLM (optional) for post-ranking
- Real-time API inference with FastAPI
- Monitoring via `evidently`
- PII masking and compliance readiness

---

## 🛠️ Features

- ⏱ Real-time scoring API (`< 300ms` latency)
- 🔐 Data privacy with PII masking (email, phone)
- ✅ Model monitoring with drift detection
- 📥 Batch inference + CRM Push (WhatsApp/Hubspot etc.)
- 📈 Lead ranking dashboard

---

## 🚀 Demo (Synthetic Dataset)

| Lead ID | Intent Score | Sentiment | CTA Clicks |
|---------|--------------|-----------|------------|
| LEAD1001 | 0.91         | 0.88      | 4          |
| LEAD1042 | 0.87         | 0.52      | 5          |

---

## 🧬 Dataset Columns

- `avg_session_duration`
- `clicks_on_cta`
- `recent_activity_gap_hours`
- `user_age_group`
- `location_tier`
- `occupation_type`
- `ad_click_origin`
- `products_viewed_count`
- `last_message_sentiment`
- `days_since_first_contact`
- `intent_score`

---

## 🏗️ Architecture

*(You would typically embed an architecture diagram here, e.g., using `![Architecture Diagram](path/to/your/architecture_diagram.png)`)*

Below is a high-level overview of the system's components and data flow:

1.  **Data Ingestion**: Real-time streaming of behavioral, demographic, and third-party data.
2.  **Feature Store**: `pgvector` for efficient storage and retrieval of features and vector embeddings.
3.  **Model Training**:
    * **Gradient Boosted Model**: Trained on structured features to predict initial intent scores.
    * **LLM Re-ranker**: Optionally used to refine scores based on unstructured textual data (e.g., chat logs, CRM notes).
4.  **API Layer**: FastAPI for serving real-time inference requests with low latency.
5.  **Caching**: Redis for fast retrieval of pre-computed scores and frequently accessed data.
6.  **Integration**: Direct push of intent scores to CRM (e.g., Hubspot) and communication platforms (e.g., WhatsApp).
7.  **Monitoring**: Continuous tracking of model performance, data drift, and concept drift.
8.  **Continuous Learning**: Daily model retraining and drift watch mechanisms.

---

## 🚀 Setup & Installation

To get this project running locally, follow these steps:

1.  **Clone the repository:**
    ```bash
    git clone [https://github.com/your-username/ai-lead-scoring-engine.git](https://github.com/your-username/ai-lead-scoring-engine.git)
    cd ai-lead-scoring-engine
    ```

2.  **Create a virtual environment (recommended):**
    ```bash
    python -m venv venv
    # On Windows
    .\venv\Scripts\activate
    # On macOS/Linux
    source venv/bin/activate
    ```

3.  **Install dependencies:**
    ```bash
    pip install -r requirements.txt
    ```
    *(You will need to create a `requirements.txt` file in your project root with all the necessary libraries like `fastapi`, `uvicorn`, `pandas`, `scikit-learn`, `tensorflow` or `pytorch` (depending on GBT implementation), `redis`, `evidently`, `psycopg2-binary` (for pgvector interaction), etc.)*

4.  **Database Setup (PostgreSQL with pgvector):**
    * Ensure PostgreSQL is installed and running.
    * Install the `pgvector` extension.
    * Create a database and configure
## Screenshots

![App Screenshot]("C:\Users\admin\Downloads\bb9dd50d-2481-47f7-aac5-82ee0ed89829.webp")


